{"version":3,"sources":["home-page/header.js","step-1/index.js","step-2/index.js","step-3/index.js","step-4/index.js","form-page/index.js","home-page/index.js","serviceWorker.js","index.js"],"names":["Header","className","Step1","this","props","currentStep","htmlFor","id","name","type","placeholder","value","fullname","onChange","handleChange","occupation","condensedOccupation","pet","embarassingCondensedMem","Component","Step2","stabbed","talent","carrots","intangible","horses","last","Step3","status","matter","similar","zodiac","personality","Step4","Fragment","kurt","kubrick","joy","NPR","war","rows","condensedMads","Form","event","target","setState","roll","diceType","Math","floor","random","calculateName","kojimaName","state","numNames","kojimaNames","i","manCondition","cloneCondition","lickable","nameCondition","nameCat","conditionRoll","nameCatRoll","occupationalRoll","hornyRoll","nameRoll","coolRoll","violentRoll","j","length","handleSubmit","preventDefault","submitted","_next","document","getElementById","scrollIntoView","_prev","split","map","key","onClick","previousButton","onSubmit","nextButton","renderKojimaName","renderCloneCondition","renderTongue","App","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e233dd4d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n        <div className=\"row d-flex justify-content-center header\">\n            <div className=\"col-sm\">\n                welcome to the kojima name generator, please enjoy your stay\n            </div>\n        </div>        \n);\n\nexport default Header;","import React, { Component } from 'react';\r\nclass Step1 extends Component {\r\n    render() {\r\n      if (this.props.currentStep !== 1) { // Prop: The current step\r\n        return null\r\n      }\r\n      // The markup for the Step 1 UI\r\n      return(\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"fullname\">What is your full name?</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"fullname\"\r\n            name=\"fullname\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your full name\"\r\n            value={this.props.fullname} // Prop: The full name input data\r\n            onChange={this.props.handleChange} // Prop: Puts data into state\r\n          />\r\n          <br></br>\r\n          <label htmlFor=\"occupation\">What do you do at your occupation?</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"occupation\"\r\n            name=\"occupation\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your occupation\"\r\n            value={this.props.occupation} // Prop: The full name input data\r\n            onChange={this.props.handleChange} // Prop: Puts data into state\r\n          />\r\n          <br></br>\r\n          <label htmlFor=\"condensedOccupation\">Condense the verb in your answer into a single -er noun. (e.g. if you are a sheep farmer, your answer will be \"farmer\")</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"condensedOccupation\"\r\n            name=\"condensedOccupation\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your condensed occupation\"\r\n            value={this.props.condensedOccupation} // Prop: The full name input data\r\n            onChange={this.props.handleChange} // Prop: Puts data into state\r\n          />\r\n          <br></br>\r\n          <label htmlFor=\"pet\">What was your first pet's specific species/breed? If you have never had a pet, please answer with an animal you wish you owned.</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"pet\"\r\n            name=\"pet\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your first pet\"\r\n            value={this.props.pet} // Prop: The full name input data\r\n            onChange={this.props.handleChange} // Prop: Puts data into state\r\n          />\r\n          <br></br>\r\n          <label htmlFor=\"embarassingMem\">What's your most embarassing childhood memory? Be specific.</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"embarassingMem\"\r\n            name=\"embarassingMem\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your embarassing memory\"\r\n          />\r\n          <br></br>\r\n          <label htmlFor=\"embarassingCondensedMem\">Condense this story into two words</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"embarassingCondensedMem\"\r\n            name=\"embarassingCondensedMem\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your shorter embarassing memory\"\r\n            value={this.props.embarassingCondensedMem} // Prop: The full name input data\r\n            onChange={this.props.handleChange} // Prop: Puts data into state\r\n          />\r\n          <br></br>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\nexport default Step1","import React, { Component } from 'react';\r\nclass Step2 extends Component {\r\n    render() {\r\n        if (this.props.currentStep !== 2) {\r\n            return null\r\n            } \r\n            return(\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"stabbed\">What is the object you'd least like to be stabbed by?</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"stabbed\"\r\n                name=\"stabbed\"\r\n                type=\"text\"\r\n                placeholder=\"Enter the stabby object\"\r\n                value={this.props.stabbed}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"talent\">What is something you are good at? (Verb ending in -ing)</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"talent\"\r\n                name=\"talent\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your verbed talent\"\r\n                value={this.props.talent}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"carrots\">How many carrots do you believe you could eat in one sitting, if someone, like, forced you to eat as many carrots as possible?</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"carrots\"\r\n                name=\"carrots\"\r\n                type=\"text\"\r\n                placeholder=\"HOW MANY CARROTS\"\r\n                value={this.props.carrots}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"intangible\">What is your greatest intangible fear? (e.g. death, loneliness, fear itself)</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"intangible\"\r\n                name=\"intangible\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your intangible fear\"\r\n                value={this.props.intangible}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"horses\">What is your greatest tangible fear? (e.g. horses)</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"horses\"\r\n                name=\"horses\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your tangible fear\"\r\n                value={this.props.horses}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"last\">What is the last thing you did before starting this form?</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"last\"\r\n                name=\"last\"\r\n                type=\"text\"\r\n                placeholder=\"Enter what you're putting off doing to fill out this form\"\r\n                value={this.props.last}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n            </div>\r\n            );\r\n    }\r\n  }\r\nexport default Step2","import React, { Component } from 'react';\r\nclass Step3 extends Component {\r\n    render() {\r\n        if (this.props.currentStep !== 3) {\r\n            return null\r\n            } \r\n            return(\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"status\">What condition is your body corrently in? (single word answer)</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"status\"\r\n                name=\"status\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your current status\"\r\n                value={this.props.status}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"matter\">Favorite state of matter?</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"matter\"\r\n                name=\"matter\"\r\n                type=\"text\"\r\n                placeholder=\"Enter what matters\"\r\n                value={this.props.matter}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"similar\">A word your name kind of sounds like? (e.g Brian -> Brain)</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"similar\"\r\n                name=\"similar\"\r\n                type=\"text\"\r\n                placeholder=\"I'm sorry about that matter pun, I really am\"\r\n                value={this.props.similar}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"zodiac\">What is your Zodiac sign?</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"zodiac\"\r\n                name=\"zodiac\"\r\n                type=\"text\"\r\n                placeholder=\"Look I'm sorry, but Ted Cruz isn't a Zodiac sign\"\r\n                value={this.props.zodiac}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"personality\">If you had to define your personality in one word, what would it be?</label>\r\n                <input\r\n                className=\"form-control\"\r\n                id=\"personality\"\r\n                name=\"personality\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your soul here!\"\r\n                value={this.props.personality}\r\n                onChange={this.props.handleChange}\r\n                />\r\n                <br></br>\r\n            </div>\r\n            );\r\n    }\r\n  }\r\nexport default Step3","import React, { Component } from 'react';\r\nclass Step4 extends Component {\r\n    render(){\r\n        if (this.props.currentStep !== 4) {\r\n            return null\r\n          } \r\n          return(\r\n            <React.Fragment>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"kurt\">Who is your favorite film character? (NOTE: must be played by Kurt Russell)</label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"kurt\"\r\n                name=\"kurt\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your favorite Kurt Russell\"\r\n                value={this.props.kurt}\r\n                onChange={this.props.handleChange}\r\n                /> \r\n              <br></br>\r\n              <label htmlFor=\"kubrick\">What is the last word of the title of your favorite Kubrick film?</label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"kubrick\"\r\n                name=\"kubrick\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your favorite Kubrick film ending here\"\r\n                value={this.props.kubrick}\r\n                onChange={this.props.handleChange}\r\n                /> \r\n              <br></br>  \r\n              <label htmlFor=\"joy\">What is the first word in the title of your favorite Joy Division album?</label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"joy\"\r\n                name=\"joy\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your Joy Division title here\"\r\n                value={this.props.joy}\r\n                onChange={this.props.handleChange}\r\n                /> \r\n              <br></br> \r\n              <label htmlFor=\"NPR\">What is a scientific term you picked up from listening to NPR once?</label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"NPR\"\r\n                name=\"NPR\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your favorite scientific word here\"\r\n                value={this.props.NPR}\r\n                onChange={this.props.handleChange}\r\n                /> \r\n              <br></br>\r\n              <label htmlFor=\"war\">What is a piece of military hardware you think looks cool even though war is bad?</label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"war\"\r\n                name=\"war\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your war machine here\"\r\n                value={this.props.war}\r\n                onChange={this.props.handleChange}\r\n                /> \r\n              <br></br>  \r\n              <label htmlFor=\"mads\">What is something you'd enjoy watching Mads Mikkelsen do?</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"mads\"\r\n                name=\"mads\"\r\n                type=\"text\"\r\n                placeholder=\"By golly I could probably watch him do anything!\"\r\n                rows=\"15\" \r\n                /> \r\n              <br></br>  \r\n              <label htmlFor=\"condensedMads\">Please condense into one word.</label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"condensedMads\"\r\n                name=\"condensedMads\"\r\n                type=\"text\"\r\n                placeholder=\"Just one!\"\r\n                value={this.props.condensedMads}\r\n                onChange={this.props.handleChange}\r\n                /> \r\n              <br></br>    \r\n            </div>\r\n            <button className=\"btn btn-success btn-block\">Calculate Kojima Name</button>\r\n            </React.Fragment>\r\n          );\r\n    }\r\n  }\r\nexport default Step4","import React, { Component } from 'react';\r\nimport \"./form.css\";\r\nimport Step1 from '../step-1'\r\nimport Step2 from '../step-2'\r\nimport Step3 from '../step-3'\r\nimport Step4 from '../step-4'\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          currentStep: 1,\r\n          fullname: '',\r\n          occupation: '',\r\n          condensedOccupation: '',\r\n          pet: '',\r\n          embarassingCondensedMem: '',\r\n          stabbed: '',\r\n          talent: '',\r\n          carrots: '',\r\n          intangible: '',\r\n          horses: '',\r\n          last: '',\r\n          status: '',\r\n          matter: '',\r\n          similar: '',\r\n          zodiac: '',\r\n          personality: '',\r\n          kurt: '', \r\n          kubrick: '',\r\n          joy: '',\r\n          NPR: '',\r\n          war: '',\r\n          condensedMads: '',\r\n          kojimaName: '',\r\n          cloneCondition: '',\r\n          lickable: '',\r\n          nameCat: '',\r\n          submitted: false\r\n        }\r\n      }\r\n    \r\n      handleChange = event => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n          [name]: value\r\n        })    \r\n      }\r\n\r\n      roll = diceType => {\r\n          return Math.floor(Math.random()*diceType + 1);\r\n      }\r\n\r\n      calculateName = () => {\r\n        var kojimaName = \"\";\r\n        const { fullname, occupation, condensedOccupation, pet, embarassingCondensedMem, \r\n            stabbed, talent, carrots, intangible, horses, last,\r\n            status, matter, similar, zodiac, personality, \r\n            kurt, kubrick, joy, NPR, war, condensedMads } = this.state\r\n        var numNames = this.roll(6);\r\n        if(numNames < 6){\r\n            numNames = 1;\r\n        }\r\n        var kojimaNames = []; \r\n        for(var i = 0; i < numNames; i++){\r\n            kojimaNames[i] = \"\";\r\n            // The -man condition\r\n            var manCondition = false;\r\n            var cloneCondition = false;\r\n            var kojimaCondition = false;\r\n            var lickable = false;\r\n            var nameCondition = false;\r\n            var nameCat = \"\";\r\n            if(this.roll(4) === 4){\r\n                // come back at the end to append this\r\n                manCondition = true;\r\n            }\r\n            // The condition condition\r\n            var conditionRoll = this.roll(8);\r\n            if(conditionRoll === 6){\r\n                kojimaNames[i] = \" Big\" + kojimaNames[i];\r\n            }\r\n            else if(conditionRoll === 7){\r\n                kojimaNames[i] = \" Old\" + kojimaNames[i];\r\n            }\r\n            else if(conditionRoll === 8){\r\n                kojimaNames[i] = \" \" + status + kojimaNames[i];\r\n            }\r\n            //The Clone Condition\r\n            if(this.roll(12) === 12){\r\n                cloneCondition = true;\r\n            }\r\n            //The Kojima Condition\r\n            if(this.roll(100) === 69){\r\n                kojimaCondition = true;\r\n                kojimaNames[i] = \"Hideo Kojima\"\r\n                nameCat = \"Oh no. You are Hideo Kojima. Hideo Kojima created you and is also you. You are the man who created himself and there is nothing you can do about it. You're in Kojima's world - your world - and that's just the breaks, pal. Stop this right now. You're Hideo Kojima. Go do the things that Hideo Kojima does.\"\r\n            }\r\n            else{\r\n              //Determine name category\r\n              var nameCatRoll = this.roll(20);\r\n              if(nameCatRoll === 1){\r\n                  nameCat = \"NORMAL NAME\";\r\n                  kojimaNames[i] += \" \" + fullname;\r\n              }\r\n              else if(nameCatRoll >= 2 && nameCatRoll <= 6){\r\n                  nameCat = \"OCCUPATIONAL NAME\";\r\n                  var occupationalRoll = this.roll(4);\r\n                  if(occupationalRoll === 1){\r\n                      kojimaNames[i] += \" \" + personality;\r\n                  }\r\n                  else if(occupationalRoll === 2){\r\n                      kojimaNames[i] += \" \" + talent;\r\n                  }\r\n                  else if(occupationalRoll === 3){\r\n                      kojimaNames[i] += \" \" + similar;\r\n                  }\r\n                  else{\r\n                      kojimaNames[i] += \" \" + kurt;\r\n                  }\r\n                  kojimaNames[i] += \" \" + condensedOccupation;\r\n              }\r\n              else if(nameCatRoll >= 7 && nameCatRoll <= 10){\r\n                  nameCat = \"HORNY NAME\";\r\n                  lickable = true;\r\n                  var hornyRoll = this.roll(4);\r\n                  if(hornyRoll === 1){\r\n                      kojimaNames[i] += \" \" + matter;\r\n                  }\r\n                  else if(hornyRoll === 2){\r\n                      kojimaNames[i] += \" Naked\";\r\n                  }\r\n                  else if(hornyRoll === 3){\r\n                      kojimaNames[i] += \" \" + talent;\r\n                  }\r\n                  else{\r\n                      kojimaNames[i] += \" \" + zodiac;\r\n                  }\r\n                  kojimaNames[i] += \" \" + pet;\r\n              }\r\n              else if(nameCatRoll >= 11 && nameCatRoll <= 13){\r\n                  nameCat = \"THE NAME\";\r\n                  nameCondition = true;\r\n                  var nameRoll = this.roll(4);\r\n                  if(nameRoll === 1){\r\n                      kojimaNames[i] += \" \" + intangible;\r\n                  }\r\n                  else if(nameRoll === 2){\r\n                      kojimaNames[i] += \" \" + horses;\r\n                  }\r\n                  else if(nameRoll === 3){\r\n                      kojimaNames[i] += \" \" + embarassingCondensedMem;\r\n                  }\r\n                  else{\r\n                      kojimaNames[i] += \" \" + war;\r\n                  }\r\n              }\r\n              else if(nameCatRoll >= 14 && nameCatRoll <= 17){\r\n                  nameCat = \"COOL NAME\";\r\n                  kojimaNames[i] += \" \" + condensedMads;\r\n                  var coolRoll = this.roll(6);\r\n                  if(coolRoll === 1){\r\n                      kojimaNames[i] += \" \" + kubrick;\r\n                  }\r\n                  else if(coolRoll === 2){\r\n                      kojimaNames[i] += \" \" + joy;\r\n                  }\r\n                  else if(coolRoll === 3){\r\n                      kojimaNames[i] += \" \" + NPR;\r\n                  }\r\n                  else if(coolRoll === 4){\r\n                      kojimaNames[i] += \" \" + talent;\r\n                  }\r\n                  else if(coolRoll === 5){\r\n                      kojimaNames[i] += \" \" + intangible;\r\n                  }\r\n                  else{\r\n                      kojimaNames[i] += \" \" + similar;\r\n                  }\r\n              }\r\n              else if(nameCatRoll >= 18 && nameCatRoll <= 19){\r\n                  nameCat = \"VIOLENT NAME\";\r\n                  var violentRoll = this.roll(4);\r\n                  if(violentRoll === 1){\r\n                      kojimaNames[i] += \" \" + NPR;\r\n                  }\r\n                  else if(violentRoll === 2){\r\n                      kojimaNames[i] += \" \" + matter;\r\n                  }\r\n                  else if(violentRoll === 3){\r\n                      kojimaNames[i] += \" \" + war;\r\n                  }\r\n                  else{\r\n                      kojimaNames[i] += \" \" + horses;\r\n                  }\r\n                  kojimaNames[i] += \" \" + stabbed;\r\n              }\r\n              else if(nameCatRoll === 20){\r\n                  nameCat = \"NAME THAT LACKS SUBTEXT\";\r\n                  kojimaNames[i] += \" \" + last;\r\n              }\r\n              if(manCondition){\r\n                  kojimaNames[i] += \"-man\";\r\n              }\r\n              if(nameCondition){\r\n                  kojimaNames[i] = \" The\" + kojimaNames[i];\r\n              }\r\n            }\r\n            kojimaNames[i] = kojimaNames[i] + \" \";\r\n        }\r\n        // return cloneCondition, lickable, nameCat, kojimaNames[i];\r\n        this.setState({cloneCondition: cloneCondition});\r\n        this.setState({lickable: lickable});\r\n        this.setState({nameCat: nameCat});  \r\n        for(var j = 0; j < kojimaNames.length; j++){\r\n          kojimaName += kojimaNames[j] + \"\\n\";\r\n        }      \r\n        this.setState({kojimaName: kojimaName});\r\n      }\r\n       \r\n      handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.setState({ submitted: true })\r\n        this.calculateName();\r\n      }\r\n      \r\n      renderCloneCondition(){\r\n        if(this.state.cloneCondition === true){\r\n            return <React.Fragment>\r\n            <div className=\"container\">\r\n              <h3 className = \"row d-flex justify-content-center kojima\">You rolled the clone condition, so go trade half your name with someone else's</h3>\r\n            </div>\r\n            </React.Fragment>  \r\n        }\r\n      }\r\n\r\n      renderTongue(){\r\n        if(this.state.lickable === true){\r\n            return <React.Fragment>\r\n            <div className=\"container\">\r\n              <h3 className = \"row d-flex justify-content-center kojima\">If you feel like it, your middle name can be \"Lickable.\" I won't stop you.</h3>\r\n            </div>\r\n            </React.Fragment>  \r\n        }\r\n      }\r\n\r\n      renderKojimaName() {\r\n        return <React.Fragment>\r\n          <div className=\"container\">\r\n            <h2 className = \"row d-flex justify-content-center kojima\">Your Kojima name is:</h2>\r\n            {this.state.kojimaName.split(\"\\n\").map((i,key) => {\r\n            return <h1 className = \"row d-flex justify-content-center kojima\" key={key}>{i}</h1>})}\r\n            {/* <h1 className = \"row d-flex justify-content-center kojima\">{this.state.kojimaName}</h1> */}\r\n            <h3 className = \"row d-flex justify-content-center kojima\">{this.state.nameCat}</h3>\r\n            <h3 className = \"row d-flex justify-content-center kojima\">Now go make an elaborate back story to go along with your new name!</h3>\r\n          </div>\r\n            </React.Fragment>  \r\n      }\r\n      \r\n      _next = () => {\r\n        let currentStep = this.state.currentStep\r\n        currentStep = currentStep >= 3? 4: currentStep + 1\r\n        this.setState({\r\n          currentStep: currentStep\r\n        })\r\n        var elmnt = document.getElementById(\"kojima\");\r\n        elmnt.scrollIntoView(); \r\n      }\r\n        \r\n      _prev = () => {\r\n        let currentStep = this.state.currentStep\r\n        currentStep = currentStep <= 1? 1: currentStep - 1\r\n        this.setState({\r\n          currentStep: currentStep\r\n        })\r\n        var elmnt = document.getElementById(\"kojima\");\r\n        elmnt.scrollIntoView(); \r\n      }\r\n    \r\n    /*\r\n    * the functions for our button\r\n    */\r\n    previousButton() {\r\n      let currentStep = this.state.currentStep;\r\n      if(currentStep !==1){\r\n        return (\r\n          <button \r\n            className=\"btn btn-secondary float-right\" \r\n            type=\"button\" onClick={this._prev}>\r\n          Previous\r\n          </button>\r\n        )\r\n      }\r\n      return null;\r\n    }\r\n    \r\n    nextButton(){\r\n      let currentStep = this.state.currentStep;\r\n      if(currentStep <4){\r\n        return (\r\n          <button \r\n            className=\"btn btn-primary float-right\" \r\n            type=\"button\" onClick={this._next}>\r\n          Next\r\n          </button>        \r\n        )\r\n      }\r\n      return null;\r\n    }\r\n      \r\n      render() {    \r\n        return (\r\n          <React.Fragment>\r\n          <h1 id=\"kojima\">KOJIMA NAME GENERATOR</h1>\r\n          <p>You are on Section {this.state.currentStep} {this.previousButton()}</p> \r\n    \r\n          <form onSubmit={this.handleSubmit}>\r\n          {/* \r\n            render the form steps and pass required props in\r\n          */}\r\n          \r\n            <Step1 \r\n              currentStep={this.state.currentStep} \r\n              handleChange={this.handleChange}\r\n              fullname={this.state.fullname}\r\n              occupation={this.state.occupation}\r\n              condensedOccupation={this.state.condensedOccupation}\r\n              embarassingCondensedMem = {this.state.embarassingCondensedMem}\r\n              pet={this.state.pet}\r\n            />\r\n            <Step2 \r\n              currentStep={this.state.currentStep} \r\n              handleChange={this.handleChange}\r\n              stabbed={this.state.stabbed}\r\n              talent={this.state.talent}\r\n              carrots={this.state.carrots}\r\n              intangible={this.state.intangible}\r\n              horses={this.state.horses}\r\n              last={this.state.last}\r\n            />\r\n            <Step3 \r\n              currentStep={this.state.currentStep} \r\n              handleChange={this.handleChange}\r\n              status={this.state.status}\r\n              matter={this.state.matter}\r\n              similar={this.state.similar}\r\n              zodiac={this.state.zodiac}\r\n              personality={this.state.personality}\r\n            />\r\n            <Step4\r\n              currentStep={this.state.currentStep} \r\n              handleChange={this.handleChange}\r\n              kurt={this.state.kurt}\r\n              kubrick={this.state.kubrick}\r\n              joy={this.state.joy}\r\n              NPR={this.state.NPR}\r\n              war={this.state.war}\r\n              condensedMads={this.state.condensedMads}\r\n            />\r\n            {this.nextButton()}\r\n            <br></br>\r\n            {this.state.submitted && this.renderKojimaName()}\r\n            {this.state.submitted && this.renderCloneCondition()}\r\n            {this.state.submitted && this.renderTongue()}\r\n    \r\n          </form>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n \r\nexport default Form;","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './header'\nimport './header.css'\nimport Form from '../form-page'\n\n\nclass App extends Component {\n  state = {}\n\n  render(){\n    return(\n      <div>\n        <Header/>\n        <div className=\"container\">\n          <Form/>\n        </div>\n        <br></br><br></br>\n        <div className = \"footer\">All of the ideas here are credited to <a href=\"https://twitter.com/briamgilbert\" target=\"_blank\" rel=\"noopener noreferrer\">brian david gilbert</a>. Check out my inspiration <a href=\"https://www.youtube.com/watch?v=t-3i6GBYvdw\" target=\"_blank\" rel=\"noopener noreferrer\">here!</a></div>\n      </div>      \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './home-page';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}